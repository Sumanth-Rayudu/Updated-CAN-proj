#include <SPI.h>
#include <mcp2515.h>
#include <DHT.h>

#define DHTPIN 6
#define DHTTYPE DHT11

int irValue = 0;
int mq2Value = 0;  // Declare outside of the if block
int ldrValue = 0;

// Define pin numbers for additional sensors
const int flamePin = A2;
const int analogPin = A1;
const int ldrPin = A5;

struct can_frame canMsg;

MCP2515 mcp2515(10);

DHT dht(DHTPIN, DHTTYPE);

void setup()
{
  pinMode(flamePin, INPUT);
  pinMode(analogPin, INPUT);
  pinMode(ldrPin, INPUT);

  while (!Serial);
  Serial.begin(9600);
  SPI.begin();
  dht.begin();

  mcp2515.reset();
  mcp2515.setBitrate(CAN_500KBPS, MCP_8MHZ);
  mcp2515.setNormalMode();
}

void loop()
{
  int h = dht.readHumidity();
  int t = dht.readTemperature();

  // for gas sensor
  int sensorValue = analogRead(analogPin);
  if (sensorValue > 30) {
    mq2Value = 1;  // Assign to the global variable
  } else {
    mq2Value = 0;  // Assign to the global variable
  }

 /* // for fire sensor
  int flameValue = analogRead(flamePin);
  if (flameValue < 200) {
    irValue = 1;  // Assign to the global variable
  } else {
    irValue = 0;  // Assign to the global variable
  }
    */
  // for fire sensor
int irValuePin = A2;  // Adjust this to the correct pin for your IR sensor
int flameValue = analogRead(irValuePin);
if (flameValue < 200) {
  irValue = 1;  // Assign to the global variable
} else {
  irValue = 0;  // Assign to the global variable
}


  // for ldr sensor that is light
  int ldrnote = analogRead(ldrPin);
  if (ldrnote < 400) {
    ldrValue = 0;
  } else {
    ldrValue = 1;
  }

  canMsg.can_id = 0x036;
  canMsg.can_dlc = 8;
  canMsg.data[0] = h;
  canMsg.data[1] = t;
  canMsg.data[2] = irValue;
  canMsg.data[3] = mq2Value;
  canMsg.data[4] = ldrValue;
  canMsg.data[5] = 0x00;
  canMsg.data[6] = 0x00;
  canMsg.data[7] = 0x00;

  mcp2515.sendMessage(&canMsg);

  Serial.print("Humidity: ");
  Serial.print(h);
  Serial.print("%, Temperature: ");
  Serial.print(t);
  Serial.print("C, IR Sensor: ");
  Serial.print(irValue);
  Serial.print(", Flame Sensor: ");
  Serial.print(flameValue);
  Serial.print(", MQ2 Sensor: ");
  Serial.print(mq2Value);
  Serial.print(", LDR Sensor: ");
  Serial.print(ldrValue);
  Serial.println(ldrnote);

  delay(1000);
}
